package py.com.excelsis.sicca.entity;

// Generated 17-nov-2011 17:00:10 by Hibernate Tools 3.4.0.Beta1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * PersonaPostulante generated by hbm2java
 */
@Entity
@Table(name = "persona_postulante", schema = "seleccion")
public class PersonaPostulante implements java.io.Serializable {

	private Long idPersonaPostulante;
	private DatosEspecificos datosEspecificos;
	private String nombres;
	private String apellidos;
	private String documentoIdentidad;
	private String EMail;
	private String sexo;
	private String estadoCivil;
	private Date fechaNacimiento;
	private Pais paisExpedicionDoc;
	private Ciudad ciudadNac;
	private String callePrincipal;
	private String primeraLateral;
	private String segundaLateral;
	private String departamentoNro;
	private String piso;
	private String observacion;
	private Ciudad ciudadDirecc;
	private String direccionLaboral;
	private String otrasDirecciones;
	private String telefonos;
	private boolean activo;
	private String usuAlta;
	private Date fechaAlta;
	private String usuMod;
	private Date fechaMod;
	private Persona persona;
	private Barrio barrio;
	private String usuAltaOee;
	private Date fechaAltaOee;
	private String tipo;
	private String telefonoPart;
	private String telefonoLab;
	private Set<PersonaDiscapacidad> personaDiscapacidads = new HashSet<PersonaDiscapacidad>(0);
	private Set<Postulacion> postulacions = new HashSet<Postulacion>(0);
	private Set<IdiomasPersona> idiomasPersonas = new HashSet<IdiomasPersona>(0);
	private Set<ExperienciaLaboral> experienciaLaborals = new HashSet<ExperienciaLaboral>(0);
	private Set<ExperienciaLaboralLegajo> experienciaLaboralsLegajo = new HashSet<ExperienciaLaboralLegajo>(0);
	private Set<EstudiosRealizados> estudiosRealizadoses = new HashSet<EstudiosRealizados>(0);
	private Set<EstudiosRealizadosLegajo> estudiosRealizadosesLegajo = new HashSet<EstudiosRealizadosLegajo>(0);
	public PersonaPostulante() {
	}

	public PersonaPostulante(
			Long idPersonaPostulante, String nombres, String apellidos, String documentoIdentidad,
			boolean activo, String usuAlta, Date fechaAlta, Persona persona) {
		this.idPersonaPostulante = idPersonaPostulante;
		this.nombres = nombres;
		this.apellidos = apellidos;
		this.documentoIdentidad = documentoIdentidad;
		this.activo = activo;
		this.usuAlta = usuAlta;
		this.fechaAlta = fechaAlta;
		this.persona = persona;
	}

	public PersonaPostulante(
			Long idPersonaPostulante, DatosEspecificos datosEspecificos, String nombres,
			String apellidos, String documentoIdentidad, String EMail, String sexo,
			String estadoCivil, Date fechaNacimiento, Long idPaisExpedicionDoc, Ciudad ciudadNac,
			String callePrincipal, String primeraLateral, String segundaLateral,
			String departamentoNro, String piso, String observacion, Ciudad ciudadDirecc,
			String direccionLaboral, String otrasDirecciones, String telefonos, boolean activo,
			String usuAlta, Date fechaAlta, String usuMod, Date fechaMod, Persona persona,
			Barrio barrio, Set<PersonaDiscapacidad> personaDiscapacidads,
			Set<Postulacion> postulacions, Set<IdiomasPersona> idiomasPersonas,
			Set<ExperienciaLaboral> experienciaLaborals,
			Set<EstudiosRealizados> estudiosRealizadoses) {
		this.idPersonaPostulante = idPersonaPostulante;
		this.datosEspecificos = datosEspecificos;
		this.nombres = nombres;
		this.apellidos = apellidos;
		this.documentoIdentidad = documentoIdentidad;
		this.EMail = EMail;
		this.sexo = sexo;
		this.estadoCivil = estadoCivil;
		this.fechaNacimiento = fechaNacimiento;
		this.paisExpedicionDoc = paisExpedicionDoc;
		this.ciudadNac = ciudadNac;
		this.callePrincipal = callePrincipal;
		this.primeraLateral = primeraLateral;
		this.segundaLateral = segundaLateral;
		this.departamentoNro = departamentoNro;
		this.piso = piso;
		this.observacion = observacion;
		this.ciudadDirecc = ciudadDirecc;
		this.direccionLaboral = direccionLaboral;
		this.otrasDirecciones = otrasDirecciones;
		this.telefonos = telefonos;
		this.activo = activo;
		this.usuAlta = usuAlta;
		this.fechaAlta = fechaAlta;
		this.usuMod = usuMod;
		this.fechaMod = fechaMod;
		this.persona = persona;
		this.barrio = barrio;
		this.personaDiscapacidads = personaDiscapacidads;
		this.postulacions = postulacions;
		this.idiomasPersonas = idiomasPersonas;
		this.experienciaLaborals = experienciaLaborals;
		this.estudiosRealizadoses = estudiosRealizadoses;
	}

	@Id
	@GeneratedValue(generator = "PERSONA_POSTULANTE_GENERATOR")
	@SequenceGenerator(name = "PERSONA_POSTULANTE_GENERATOR", sequenceName = "seleccion.persona_postulante_id_persona_postulante_seq")
	@Column(name = "id_persona_postulante", unique = true, nullable = false)
	public Long getIdPersonaPostulante() {
		return this.idPersonaPostulante;
	}

	public void setIdPersonaPostulante(Long idPersonaPostulante) {
		this.idPersonaPostulante = idPersonaPostulante;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_datos_especificos_nacionalid")
	public DatosEspecificos getDatosEspecificos() {
		return this.datosEspecificos;
	}

	public void setDatosEspecificos(DatosEspecificos datosEspecificos) {
		this.datosEspecificos = datosEspecificos;
	}

	@Column(name = "nombres", nullable = false, length = 100)
	@NotNull
	@Length(max = 100)
	public String getNombres() {
		return this.nombres;
	}

	public void setNombres(String nombres) {
		this.nombres = nombres;
	}

	@Column(name = "apellidos", nullable = false, length = 80)
	@NotNull
	@Length(max = 80)
	public String getApellidos() {
		return this.apellidos;
	}

	public void setApellidos(String apellidos) {
		this.apellidos = apellidos;
	}

	@Column(name = "documento_identidad", nullable = false, length = 30)
	@NotNull
	@Length(max = 30)
	public String getDocumentoIdentidad() {
		return this.documentoIdentidad;
	}

	public void setDocumentoIdentidad(String documentoIdentidad) {
		this.documentoIdentidad = documentoIdentidad;
	}

	@Column(name = "e_mail", length = 50)
	@Length(max = 50)
	public String getEMail() {
		return this.EMail;
	}

	public void setEMail(String EMail) {
		this.EMail = EMail;
	}

	@Column(name = "sexo", length = 1)
	@Length(max = 1)
	public String getSexo() {
		return this.sexo;
	}

	public void setSexo(String sexo) {
		this.sexo = sexo;
	}

	@Column(name = "estado_civil", length = 1)
	@Length(max = 1)
	public String getEstadoCivil() {
		return this.estadoCivil;
	}

	public void setEstadoCivil(String estadoCivil) {
		this.estadoCivil = estadoCivil;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fecha_nacimiento", length = 13)
	public Date getFechaNacimiento() {
		return this.fechaNacimiento;
	}

	public void setFechaNacimiento(Date fechaNacimiento) {
		this.fechaNacimiento = fechaNacimiento;
	}

	@Column(name = "calle_principal", length = 100)
	@Length(max = 100)
	public String getCallePrincipal() {
		return this.callePrincipal;
	}

	public void setCallePrincipal(String callePrincipal) {
		this.callePrincipal = callePrincipal;
	}

	@Column(name = "primera_lateral", length = 50)
	@Length(max = 50)
	public String getPrimeraLateral() {
		return this.primeraLateral;
	}

	public void setPrimeraLateral(String primeraLateral) {
		this.primeraLateral = primeraLateral;
	}

	@Column(name = "segunda_lateral", length = 50)
	@Length(max = 50)
	public String getSegundaLateral() {
		return this.segundaLateral;
	}

	public void setSegundaLateral(String segundaLateral) {
		this.segundaLateral = segundaLateral;
	}

	@Column(name = "departamento_nro", length = 50)
	@Length(max = 50)
	public String getDepartamentoNro() {
		return this.departamentoNro;
	}

	public void setDepartamentoNro(String departamentoNro) {
		this.departamentoNro = departamentoNro;
	}

	@Column(name = "piso", length = 50)
	@Length(max = 50)
	public String getPiso() {
		return this.piso;
	}

	public void setPiso(String piso) {
		this.piso = piso;
	}

	@Column(name = "observacion", length = 50)
	@Length(max = 50)
	public String getObservacion() {
		return this.observacion;
	}

	public void setObservacion(String observacion) {
		this.observacion = observacion;
	}

	@Column(name = "direccion_laboral", length = 100)
	@Length(max = 100)
	public String getDireccionLaboral() {
		return this.direccionLaboral;
	}

	public void setDireccionLaboral(String direccionLaboral) {
		this.direccionLaboral = direccionLaboral;
	}

	@Column(name = "otras_direcciones", length = 100)
	@Length(max = 100)
	public String getOtrasDirecciones() {
		return this.otrasDirecciones;
	}

	public void setOtrasDirecciones(String otrasDirecciones) {
		this.otrasDirecciones = otrasDirecciones;
	}

	@Column(name = "telefonos", length = 100)
	@Length(max = 100)
	public String getTelefonos() {
		return this.telefonos;
	}

	public void setTelefonos(String telefonos) {
		this.telefonos = telefonos;
	}

	@Column(name = "usu_alta", nullable = false, length = 50)
	@NotNull
	@Length(max = 50)
	public String getUsuAlta() {
		return this.usuAlta;
	}

	public void setUsuAlta(String usuAlta) {
		this.usuAlta = usuAlta;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_alta", nullable = false, length = 29)
	@NotNull
	public Date getFechaAlta() {
		return this.fechaAlta;
	}

	public void setFechaAlta(Date fechaAlta) {
		this.fechaAlta = fechaAlta;
	}

	@Column(name = "usu_mod", length = 50)
	@Length(max = 50)
	public String getUsuMod() {
		return this.usuMod;
	}

	public void setUsuMod(String usuMod) {
		this.usuMod = usuMod;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_mod", length = 29)
	public Date getFechaMod() {
		return this.fechaMod;
	}

	public void setFechaMod(Date fechaMod) {
		this.fechaMod = fechaMod;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_pais_expedicion_doc")
	public Pais getPaisExpedicionDoc() {
		return paisExpedicionDoc;
	}

	public void setPaisExpedicionDoc(Pais paisExpedicionDoc) {
		this.paisExpedicionDoc = paisExpedicionDoc;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_ciudad_nac")
	public Ciudad getCiudadNac() {
		return ciudadNac;
	}

	public void setCiudadNac(Ciudad ciudadNac) {
		this.ciudadNac = ciudadNac;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_ciudad_direcc")
	public Ciudad getCiudadDirecc() {
		return ciudadDirecc;
	}

	public void setCiudadDirecc(Ciudad ciudadDirecc) {
		this.ciudadDirecc = ciudadDirecc;
	}

	@Column(name = "activo", nullable = false)
	public boolean isActivo() {
		return activo;
	}

	public void setActivo(boolean activo) {
		this.activo = activo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_persona", nullable = false)
	@NotNull
	public Persona getPersona() {
		return persona;
	}

	public void setPersona(Persona persona) {
		this.persona = persona;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_barrio")
	public Barrio getBarrio() {
		return barrio;
	}

	public void setBarrio(Barrio barrio) {
		this.barrio = barrio;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "personaPostulante")
	public Set<PersonaDiscapacidad> getPersonaDiscapacidads() {
		return this.personaDiscapacidads;
	}

	public void setPersonaDiscapacidads(Set<PersonaDiscapacidad> personaDiscapacidads) {
		this.personaDiscapacidads = personaDiscapacidads;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "personaPostulante")
	public Set<Postulacion> getPostulacions() {
		return this.postulacions;
	}

	public void setPostulacions(Set<Postulacion> postulacions) {
		this.postulacions = postulacions;
	}

	public void setIdiomasPersonas(Set<IdiomasPersona> idiomasPersonas) {
		this.idiomasPersonas = idiomasPersonas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "personaPostulante")
	public Set<ExperienciaLaboral> getExperienciaLaborals() {
		return this.experienciaLaborals;
	}

	public void setExperienciaLaborals(Set<ExperienciaLaboral> experienciaLaborals) {
		this.experienciaLaborals = experienciaLaborals;
	}
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "personaPostulante")
	public Set<ExperienciaLaboralLegajo> getExperienciaLaboralsLegajo() {
		return this.experienciaLaboralsLegajo;
	}

	public void setExperienciaLaboralsLegajo(Set<ExperienciaLaboralLegajo> experienciaLaboralsLegajo) {
		this.experienciaLaboralsLegajo = experienciaLaboralsLegajo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "personaPostulante")
	public Set<EstudiosRealizados> getEstudiosRealizadoses() {
		return this.estudiosRealizadoses;
	}

	public void setEstudiosRealizadoses(Set<EstudiosRealizados> estudiosRealizadoses) {
		this.estudiosRealizadoses = estudiosRealizadoses;
	}
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "personaPostulante")
	public Set<EstudiosRealizadosLegajo> getEstudiosRealizadosesLegajo() {
		return this.estudiosRealizadosesLegajo;
	}

	public void setEstudiosRealizadosesLegajo(Set<EstudiosRealizadosLegajo> estudiosRealizadosesLegajo) {
		this.estudiosRealizadosesLegajo= estudiosRealizadosesLegajo;
	}

	@Transient
	public String getNombreCompleto() {
		if (nombres == null && apellidos == null)
			return null;

		return nombres + " " + apellidos;
	}

	@Column(name = "usu_alta_oee", length =50) 
	@Length(max = 50)
	public String getUsuAltaOee() {
		return usuAltaOee;
	}

	public void setUsuAltaOee(String usuAltaOee) {
		this.usuAltaOee = usuAltaOee;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_alta_oee", length = 29)
	public Date getFechaAltaOee() {
		return fechaAltaOee;
	}

	public void setFechaAltaOee(Date fechaAltaOee) {
		this.fechaAltaOee = fechaAltaOee;
	}
	
	@Column(name = "tipo", length =100) 
	@Length(max = 100)
	public String getTipo() {
		return tipo;
	}

	public void setTipo(String tipo) {
		this.tipo = tipo;
	}

	@Column(name = "telefono_part", length = 50)
	@Length(max = 50)
	public String getTelefonoPart() {
		return telefonoPart;
	}

	public void setTelefonoPart(String telefonoPart) {
		this.telefonoPart = telefonoPart;
	}

	@Column(name = "telefono_lab", length = 50)
	@Length(max = 50)
	public String getTelefonoLab() {
		return telefonoLab;
	}

	public void setTelefonoLab(String telefonoLab) {
		this.telefonoLab = telefonoLab;
	}
	
	

}
