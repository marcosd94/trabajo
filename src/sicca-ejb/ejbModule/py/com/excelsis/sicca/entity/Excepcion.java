package py.com.excelsis.sicca.entity;

// Generated 12/01/2012 08:42:27 AM by Hibernate Tools 3.4.0.Beta1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * Excepcion generated by hbm2java
 */
@Entity
@Table(name = "excepcion", schema = "seleccion")
public class Excepcion implements java.io.Serializable {

	private Long idExcepcion;
	private ConcursoPuestoAgr concursoPuestoAgr;
	private Concurso concurso;
	private ComisionSeleccionCab comisionSeleccionCab;
	private String tipo;
	private String estado;
	private boolean activo;
	private String usuAlta;
	private Date fechaAlta;
	private String usuMod;
	private Date fechaMod;
	private String usuSolicitud;
	private Date fechaSolicitud;
	private String usuAprobacion;
	private Date fechaAprobacion;
	private Long idProcessInstance;
	private String observacion;
	private Long tipoBloqueo;
	private Date fechaLimite;
	private Integer idEstadoConc;
	private String usuPublicacion;
	private Date fechaPublicacion;
	private String obsCancelacion;
	private Long idConfiguracionUoBloq;
	private Date fechaDesbloqueo;
	private SolicProrrogaCab solicProrrogaCab;

	private Set<ComisionSeleccionDet> comisionSeleccionDets = new HashSet<ComisionSeleccionDet>(0);
	private Set<ExcepcionDet> excepcionDets = new HashSet<ExcepcionDet>(0);
	private Set<ExcepcionGrPuesto> excepcionGrPuestos = new HashSet<ExcepcionGrPuesto>(0);
	private Set<ExcepcionGrPuesto> excepcionGrPuestosForIdExcepcionDesbloq =
		new HashSet<ExcepcionGrPuesto>(0);
	private Set<ExcepcionElegibles> excepcionElegibleses = new HashSet<ExcepcionElegibles>(0);
	private Set<EvalReferencialPostulante> excepcionEvalReferencialPostulantes =
		new HashSet<EvalReferencialPostulante>(0);

	public Excepcion() {
	}

	public Excepcion(long idExcepcion, String tipo, boolean activo, String usuAlta, Date fechaAlta) {
		this.idExcepcion = idExcepcion;
		this.tipo = tipo;
		this.activo = activo;
		this.usuAlta = usuAlta;
		this.fechaAlta = fechaAlta;
	}

	public Excepcion(
			long idExcepcion, ConcursoPuestoAgr concursoPuestoAgr, Concurso concurso,
			ComisionSeleccionCab comisionSeleccionCab, String tipo, String estado, boolean activo,
			String usuAlta, Date fechaAlta, String usuMod, Date fechaMod, String usuSolicitud,
			Date fechaSolicitud, String usuAprobacion, Date fechaAprobacion,
			Long idProcessInstance,

			Set<ExcepcionDet> excepcionDets) {
		this.idExcepcion = idExcepcion;
		this.concursoPuestoAgr = concursoPuestoAgr;
		this.concurso = concurso;
		this.comisionSeleccionCab = comisionSeleccionCab;
		this.tipo = tipo;
		this.estado = estado;
		this.activo = activo;
		this.usuAlta = usuAlta;
		this.fechaAlta = fechaAlta;
		this.usuMod = usuMod;
		this.fechaMod = fechaMod;
		this.usuSolicitud = usuSolicitud;
		this.fechaSolicitud = fechaSolicitud;
		this.usuAprobacion = usuAprobacion;
		this.fechaAprobacion = fechaAprobacion;
		this.idProcessInstance = idProcessInstance;

		this.excepcionDets = excepcionDets;
	}

	@Id
	@Column(name = "id_excepcion", unique = true, nullable = false)
	@GeneratedValue(generator = "EXCEPCION_GENERATOR")
	@SequenceGenerator(name = "EXCEPCION_GENERATOR", sequenceName = "seleccion.sel_excepcion_id_excepcion_seq")
	public Long getIdExcepcion() {
		return this.idExcepcion;
	}

	public void setIdExcepcion(Long idExcepcion) {
		this.idExcepcion = idExcepcion;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_concurso_puesto_agr")
	public ConcursoPuestoAgr getConcursoPuestoAgr() {
		return this.concursoPuestoAgr;
	}

	public void setConcursoPuestoAgr(ConcursoPuestoAgr concursoPuestoAgr) {
		this.concursoPuestoAgr = concursoPuestoAgr;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_concurso")
	public Concurso getConcurso() {
		return this.concurso;
	}

	public void setConcurso(Concurso concurso) {
		this.concurso = concurso;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_comision_sel")
	public ComisionSeleccionCab getComisionSeleccionCab() {
		return this.comisionSeleccionCab;
	}

	public void setComisionSeleccionCab(ComisionSeleccionCab comisionSeleccionCab) {
		this.comisionSeleccionCab = comisionSeleccionCab;
	}

	@Column(name = "tipo", nullable = false, length = 50)
	@NotNull
	@Length(max = 50)
	public String getTipo() {
		return this.tipo;
	}

	public void setTipo(String tipo) {
		this.tipo = tipo;
	}

	@Column(name = "estado", length = 30)
	@Length(max = 30)
	public String getEstado() {
		return this.estado;
	}

	public void setEstado(String estado) {
		this.estado = estado;
	}

	@Column(name = "activo", nullable = false)
	public boolean isActivo() {
		return this.activo;
	}

	public void setActivo(boolean activo) {
		this.activo = activo;
	}

	@Column(name = "usu_alta", nullable = false, length = 50)
	@NotNull
	@Length(max = 50)
	public String getUsuAlta() {
		return this.usuAlta;
	}

	public void setUsuAlta(String usuAlta) {
		this.usuAlta = usuAlta;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_alta", nullable = false, length = 29)
	@NotNull
	public Date getFechaAlta() {
		return this.fechaAlta;
	}

	public void setFechaAlta(Date fechaAlta) {
		this.fechaAlta = fechaAlta;
	}

	@Column(name = "usu_mod", length = 50)
	@Length(max = 50)
	public String getUsuMod() {
		return this.usuMod;
	}

	public void setUsuMod(String usuMod) {
		this.usuMod = usuMod;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_mod", length = 29)
	public Date getFechaMod() {
		return this.fechaMod;
	}

	public void setFechaMod(Date fechaMod) {
		this.fechaMod = fechaMod;
	}

	@Column(name = "usu_solicitud", length = 50)
	@Length(max = 50)
	public String getUsuSolicitud() {
		return this.usuSolicitud;
	}

	public void setUsuSolicitud(String usuSolicitud) {
		this.usuSolicitud = usuSolicitud;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_solicitud", length = 29)
	public Date getFechaSolicitud() {
		return this.fechaSolicitud;
	}

	public void setFechaSolicitud(Date fechaSolicitud) {
		this.fechaSolicitud = fechaSolicitud;
	}

	@Column(name = "usu_aprobacion", length = 50)
	@Length(max = 50)
	public String getUsuAprobacion() {
		return this.usuAprobacion;
	}

	public void setUsuAprobacion(String usuAprobacion) {
		this.usuAprobacion = usuAprobacion;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_aprobacion", length = 29)
	public Date getFechaAprobacion() {
		return this.fechaAprobacion;
	}

	public void setFechaAprobacion(Date fechaAprobacion) {
		this.fechaAprobacion = fechaAprobacion;
	}

	@Column(name = "id_process_instance")
	public Long getIdProcessInstance() {
		return this.idProcessInstance;
	}

	public void setIdProcessInstance(Long idProcessInstance) {
		this.idProcessInstance = idProcessInstance;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "excepcion")
	public Set<ExcepcionDet> getExcepcionDets() {
		return this.excepcionDets;
	}

	public void setExcepcionDets(Set<ExcepcionDet> excepcionDets) {
		this.excepcionDets = excepcionDets;
	}

	@Column(name = "observacion", length = 1000)
	@Length(max = 1000)
	public String getObservacion() {
		return observacion;
	}

	public void setObservacion(String observacion) {
		this.observacion = observacion;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "excepcion")
	public Set<ExcepcionGrPuesto> getExcepcionGrPuestos() {
		return this.excepcionGrPuestos;
	}

	public void setExcepcionGrPuestos(Set<ExcepcionGrPuesto> excepcionGrPuestos) {
		this.excepcionGrPuestos = excepcionGrPuestos;
	}

	@Column(name = "tipo_bloqueo")
	public Long getTipoBloqueo() {
		return tipoBloqueo;
	}

	public void setTipoBloqueo(Long tipoBloqueo) {
		this.tipoBloqueo = tipoBloqueo;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_limite", length = 29)
	public Date getFechaLimite() {
		return fechaLimite;
	}

	public void setFechaLimite(Date fechaLimite) {
		this.fechaLimite = fechaLimite;
	}

	@Column(name = "id_estado_conc")
	public Integer getIdEstadoConc() {
		return idEstadoConc;
	}

	public void setIdEstadoConc(Integer idEstadoConc) {
		this.idEstadoConc = idEstadoConc;
	}

	@Column(name = "usu_publicacion")
	public String getUsuPublicacion() {
		return usuPublicacion;
	}

	public void setUsuPublicacion(String usuPublicacion) {
		this.usuPublicacion = usuPublicacion;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_publicacion", length = 29)
	public Date getFechaPublicacion() {
		return fechaPublicacion;
	}

	public void setFechaPublicacion(Date fechaPublicacion) {
		this.fechaPublicacion = fechaPublicacion;
	}

	@Column(name = "obs_cancelacion")
	public String getObsCancelacion() {
		return obsCancelacion;
	}

	public void setObsCancelacion(String obsCancelacion) {
		this.obsCancelacion = obsCancelacion;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_solic_cab")
	public SolicProrrogaCab getSolicProrrogaCab() {
		return solicProrrogaCab;
	}

	public void setSolicProrrogaCab(SolicProrrogaCab solicProrrogaCab) {
		this.solicProrrogaCab = solicProrrogaCab;
	}

	@Column(name = "id_configuracion_uo_bloq")
	public Long getIdConfiguracionUoBloq() {
		return this.idConfiguracionUoBloq;
	}

	public void setIdConfiguracionUoBloq(Long idConfiguracionUoBloq) {
		this.idConfiguracionUoBloq = idConfiguracionUoBloq;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "excepcionByIdExcepcionDesbloq")
	public Set<ExcepcionGrPuesto> getExcepcionGrPuestosForIdExcepcionDesbloq() {
		return this.excepcionGrPuestosForIdExcepcionDesbloq;
	}

	public void setExcepcionGrPuestosForIdExcepcionDesbloq(Set<ExcepcionGrPuesto> excepcionGrPuestosForIdExcepcionDesbloq) {
		this.excepcionGrPuestosForIdExcepcionDesbloq = excepcionGrPuestosForIdExcepcionDesbloq;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_desbloqueo", length = 29)
	public Date getFechaDesbloqueo() {
		return this.fechaDesbloqueo;
	}

	public void setFechaDesbloqueo(Date fechaDesbloqueo) {
		this.fechaDesbloqueo = fechaDesbloqueo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "excepcion")
	public Set<ExcepcionElegibles> getExcepcionElegibleses() {
		return this.excepcionElegibleses;
	}

	public void setExcepcionElegibleses(Set<ExcepcionElegibles> excepcionElegibleses) {
		this.excepcionElegibleses = excepcionElegibleses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "excepcion")
	public Set<EvalReferencialPostulante> getExcepcionEvalReferencialPostulantes() {
		return excepcionEvalReferencialPostulantes;
	}

	public void setExcepcionEvalReferencialPostulantes(Set<EvalReferencialPostulante> excepcionEvalReferencialPostulantes) {
		this.excepcionEvalReferencialPostulantes = excepcionEvalReferencialPostulantes;
	}

}
