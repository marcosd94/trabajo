package py.com.excelsis.sicca.entity;

// Generated 05/10/2011 11:41:21 AM by Hibernate Tools 3.4.0.Beta1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * DatosEspecificos generated by hbm2java
 */
@Entity
@Table(name = "datos_especificos", schema = "seleccion")
public class DatosEspecificos implements java.io.Serializable {

	private Long idDatosEspecificos;
	private DatosGenerales datosGenerales;
	private String descripcion;
	private String valorAlf;
	private Integer valorNum;
	private boolean activo;
	private String usuAlta;
	private Date fechaAlta;
	private String usuMod;
	private Date fechaMod;
	private Boolean seleccionado;

	private Set<SumarioDet> sumarioDets = new HashSet<SumarioDet>(0);
	private Set<EmpleadoPuesto> empleadoPuestosForIdDatosEspTipoIngresoMovilidad =
		new HashSet<EmpleadoPuesto>(0);
	private Set<EmpleadoPuesto> empleadoPuestosForIdDatosEspEstado = new HashSet<EmpleadoPuesto>(0);
	private Set<EmpleadoPuesto> empleadoPuestosForIdDatosEspTipoRegistro =
		new HashSet<EmpleadoPuesto>(0);

	public DatosEspecificos() {
	}

	public DatosEspecificos(
			Long idDatosEspecificos, DatosGenerales datosGenerales, String descripcion,
			boolean activo, String usuAlta, Date fechaAlta) {
		this.idDatosEspecificos = idDatosEspecificos;
		this.datosGenerales = datosGenerales;
		this.descripcion = descripcion;
		this.activo = activo;
		this.usuAlta = usuAlta;
		this.fechaAlta = fechaAlta;
	}

	public DatosEspecificos(
			Long idDatosEspecificos, DatosGenerales datosGenerales, String descripcion,
			String valorAlf, Integer valorNum, boolean activo, String usuAlta, Date fechaAlta,
			String usuMod, Date fechaMod) {
		this.idDatosEspecificos = idDatosEspecificos;
		this.datosGenerales = datosGenerales;
		this.descripcion = descripcion;
		this.valorAlf = valorAlf;
		this.valorNum = valorNum;
		this.activo = activo;
		this.usuAlta = usuAlta;
		this.fechaAlta = fechaAlta;
		this.usuMod = usuMod;
		this.fechaMod = fechaMod;
	}

	@Id
	@Column(name = "id_datos_especificos", unique = true, nullable = false)
	@GeneratedValue(generator = "DATOS_ESPECIFICOS_GENERATOR")
	@SequenceGenerator(name = "DATOS_ESPECIFICOS_GENERATOR", sequenceName = "seleccion.sel_datos_especificos_id_datos_especificos_seq")
	public Long getIdDatosEspecificos() {
		return this.idDatosEspecificos;
	}

	public void setIdDatosEspecificos(Long idDatosEspecificos) {
		this.idDatosEspecificos = idDatosEspecificos;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_datos_generales", nullable = false)
	@NotNull
	public DatosGenerales getDatosGenerales() {
		return this.datosGenerales;
	}

	public void setDatosGenerales(DatosGenerales datosGenerales) {
		this.datosGenerales = datosGenerales;
	}

	@Column(name = "descripcion", nullable = false, length = 500)
	@NotNull
	@Length(max = 500)
	public String getDescripcion() {
		return this.descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}

	@Column(name = "valor_alf", length = 30)
	@Length(max = 30)
	public String getValorAlf() {
		return this.valorAlf;
	}

	public void setValorAlf(String valorAlf) {
		this.valorAlf = valorAlf;
	}

	@Column(name = "valor_num")
	public Integer getValorNum() {
		return this.valorNum;
	}

	public void setValorNum(Integer valorNum) {
		this.valorNum = valorNum;
	}

	@Column(name = "activo", nullable = false)
	public boolean isActivo() {
		return this.activo;
	}

	public void setActivo(boolean activo) {
		this.activo = activo;
	}

	@Column(name = "usu_alta", nullable = false, length = 50)
	@NotNull
	@Length(max = 50)
	public String getUsuAlta() {
		return this.usuAlta;
	}

	public void setUsuAlta(String usuAlta) {
		this.usuAlta = usuAlta;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_alta", nullable = false, length = 29)
	@NotNull
	public Date getFechaAlta() {
		return this.fechaAlta;
	}

	public void setFechaAlta(Date fechaAlta) {
		this.fechaAlta = fechaAlta;
	}

	@Column(name = "usu_mod", length = 50)
	@Length(max = 50)
	public String getUsuMod() {
		return this.usuMod;
	}

	public void setUsuMod(String usuMod) {
		this.usuMod = usuMod;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_mod", length = 29)
	public Date getFechaMod() {
		return this.fechaMod;
	}

	public void setFechaMod(Date fechaMod) {
		this.fechaMod = fechaMod;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "datosEspecificos")
	public Set<SumarioDet> getSumarioDets() {
		return this.sumarioDets;
	}

	public void setSumarioDets(Set<SumarioDet> sumarioDets) {
		this.sumarioDets = sumarioDets;
	}

	@Transient
	public Boolean getSeleccionado() {
		return seleccionado;
	}

	public void setSeleccionado(Boolean seleccionado) {
		this.seleccionado = seleccionado;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "datosEspecificosByIdDatosEspEstado")
	public Set<EmpleadoPuesto> getEmpleadoPuestosForIdDatosEspEstado() {
		return empleadoPuestosForIdDatosEspEstado;
	}

	public void setEmpleadoPuestosForIdDatosEspEstado(Set<EmpleadoPuesto> empleadoPuestosForIdDatosEspEstado) {
		this.empleadoPuestosForIdDatosEspEstado = empleadoPuestosForIdDatosEspEstado;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "datosEspecificosByIdDatosEspTipoIngresoMovilidad")
	public Set<EmpleadoPuesto> getEmpleadoPuestosForIdDatosEspTipoIngresoMovilidad() {
		return this.empleadoPuestosForIdDatosEspTipoIngresoMovilidad;
	}

	public void setEmpleadoPuestosForIdDatosEspTipoIngresoMovilidad(Set<EmpleadoPuesto> empleadoPuestosForIdDatosEspTipoIngresoMovilidad) {
		this.empleadoPuestosForIdDatosEspTipoIngresoMovilidad =
			empleadoPuestosForIdDatosEspTipoIngresoMovilidad;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "datosEspecificosByIdDatosEspTipoRegistro")
	public Set<EmpleadoPuesto> getEmpleadoPuestosForIdDatosEspTipoRegistro() {
		return empleadoPuestosForIdDatosEspTipoRegistro;
	}

	public void setEmpleadoPuestosForIdDatosEspTipoRegistro(Set<EmpleadoPuesto> empleadoPuestosForIdDatosEspTipoRegistro) {
		this.empleadoPuestosForIdDatosEspTipoRegistro = empleadoPuestosForIdDatosEspTipoRegistro;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result =
			prime * result + ((idDatosEspecificos == null) ? 0 : idDatosEspecificos.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		DatosEspecificos other = (DatosEspecificos) obj;
		if (idDatosEspecificos == null) {
			if (other.idDatosEspecificos != null)
				return false;
		} else if (!idDatosEspecificos.equals(other.idDatosEspecificos))
			return false;
		return true;
	}
}
