package py.com.excelsis.sicca.entity;

// Generated 06-dic-2011 13:43:57 by Hibernate Tools 3.4.0.Beta1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * EvalReferencialPostulante generated by hbm2java
 */
@Entity
@Table(name = "ternas", schema = "seleccion")
public class Ternas implements java.io.Serializable, Comparable {

	private Long idTerna;
	private int nroTerna;
	private ConcursoPuestoAgr concursoPuestoAgr;
	private String nombreTerna;
	private EvalReferencialPostulante seleccionado;
	private EvalReferencialPostulante elegible_1;
	private EvalReferencialPostulante elegible_2;
	private String observacion;
	private String usuAlta;
	private Date fechaAlta;
	private String usuMod;
	private Date fechaMod;

	public Ternas() {
	}
	
	public Ternas(int indice, ConcursoPuestoAgr concursoPuestoAgr) {
		this.nombreTerna = "Terna "+Integer.toString(indice);
		this.nroTerna = indice;
		this.concursoPuestoAgr = concursoPuestoAgr;
	}

	@Id
	@GeneratedValue(generator = "TERNAS_GENERATOR")
	@SequenceGenerator(name = "TERNAS_GENERATOR", sequenceName = "seleccion.ternas_id_terna_seq")
	
	@Column(name = "id_terna", unique = true, nullable = false)
	public Long getIdTerna() {
		return this.idTerna;
	}

	public void setIdTerna(Long idTerna) {
		this.idTerna = idTerna;
	}
	
	@Column(name = "nro_terna", nullable = false)
	public int getNroTerna() {
		return this.nroTerna;
	}

	public void setNroTerna(int nroTerna) {
		this.nroTerna = nroTerna;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_concurso_puesto_agr", nullable = true)
	@NotNull
	public ConcursoPuestoAgr getConcursoPuestoAgr() {
		return this.concursoPuestoAgr;
	}

	public void setConcursoPuestoAgr(ConcursoPuestoAgr concursoPuestoAgr) {
		this.concursoPuestoAgr = concursoPuestoAgr;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_eval_ref_post_seleccionado", nullable = true)
	public EvalReferencialPostulante getSeleccionado() {
		return this.seleccionado;
	}

	public void setSeleccionado(EvalReferencialPostulante seleccionado) {
		this.seleccionado = seleccionado;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_eval_ref_post_elegible_1", nullable = true)
	public EvalReferencialPostulante getElegible_1() {
		return this.elegible_1;
	}

	public void setElegible_1(EvalReferencialPostulante elegible) {
		this.elegible_1 = elegible;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_eval_ref_post_elegible_2", nullable = true)
	public EvalReferencialPostulante getElegible_2() {
		return this.elegible_2;
	}

	public void setElegible_2(EvalReferencialPostulante elegible) {
		this.elegible_2 = elegible;
	}

	@Column(name = "nombre_terna", nullable = true)
	public String getNombre() {
		return this.nombreTerna;
	}

	public void setNombre(String nombre) {
		this.nombreTerna = nombre;
	}

	@Column(name = "observacion")
	public String getObservacion() {
		return this.observacion;
	}

	public void setObservacion(String observacion) {
		this.observacion = observacion;
	}
	
	@Column(name = "usu_alta", nullable = true, length = 50)
	@Length(max = 50)
	public String getUsuAlta() {
		return this.usuAlta;
	}

	public void setUsuAlta(String usuAlta) {
		this.usuAlta = usuAlta;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_alta", nullable = true, length = 29)
	public Date getFechaAlta() {
		return this.fechaAlta;
	}

	public void setFechaAlta(Date fechaAlta) {
		this.fechaAlta = fechaAlta;
	}

	@Column(name = "usu_mod", length = 50)
	@Length(max = 50)
	public String getUsuMod() {
		return this.usuMod;
	}

	public void setUsuMod(String usuMod) {
		this.usuMod = usuMod;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_mod", length = 29)
	public Date getFechaMod() {
		return this.fechaMod;
	}

	public void setFechaMod(Date fechaMod) {
		this.fechaMod = fechaMod;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null)
			return false;

		Ternas t = (Ternas) obj;
		return this.getIdTerna().longValue() == t.getIdTerna().longValue();
	}

	public int compareTo(Object o) {
		Ternas t = (Ternas) o;

		return Integer.valueOf(this.nroTerna).compareTo(t.getNroTerna());

	}

}
