package py.com.excelsis.sicca.entity;

// Generated 18/09/2011 08:56:37 PM by Hibernate Tools 3.4.0.Beta1

import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

import py.com.excelsis.sicca.seguridad.entity.Usuario;

/**
 * Persona generated by hbm2java
 */
@Entity
@Table(name = "persona", schema = "general")
public class Persona implements java.io.Serializable {

	private Long idPersona;
	private Pais paisByIdPaisExpedicionDoc;
	private Ciudad ciudadByIdCiudadDirecc;
	private Ciudad ciudadByIdCiudadNac;
	private DatosEspecificos datosEspecificos;
	private String nombres;
	private String apellidos;
	private String documentoIdentidad;
	private String EMail;
	private String EMailFuncionario;
	private String sexo;
	private String estadoCivil;
	private Date fechaNacimiento;
	private String departamentoNro;
	private String piso;
	private String callePrincipal;
	private String primeraLateral;
	private String segundaLateral;
	private String direccionLaboral;
	private String otrasDirecciones;
	private String telefonos;
	private Boolean activo;
	private String usuAlta;
	private Date fechaAlta;
	private String usuMod;
	private Date fechaMod;
	private String observacion;
	private Barrio barrio;
	private Boolean esFuncionario;
	private DatosEspecificos datosEspecificosMotivo;
	private String obsMotivo;
	private Boolean selected;
	private String usuAltaOee;
	private Date fechaAltaOee;
	private String usuModOee;
	private Date fechaModOee;
	private String tipo;
	private String grupoSanguineoAbo;
	private String grupoSanguineoRh;
	private DatosEspecificos datosEspecificosEtnia;
	private Documentos documentos;
	private String telefonoPart;
	private String telefonoLab;
	private String telContacto;
	private Boolean tienePariente;
	private Long cantPersonasACargo;
	private Boolean enfermo;
	private Documentos documentoSangre;
	
	private Set<DatosVacaciones> datosVacacioneses = new HashSet<DatosVacaciones>(0);
	private Set<Empleado> empleados = new HashSet<Empleado>(0);
	private Set<Usuario> usuarios = new HashSet<Usuario>(0);
	private Set<EmpresaPersona> empresaPersonas = new HashSet<EmpresaPersona>(0);
	private Set<ExperienciaLaboral> experienciaLaborals = new HashSet<ExperienciaLaboral>(0);
	private Set<Parentesco> parentescos = new HashSet<Parentesco>(0);
	private Set<ExperienciaLaboralLegajo> experienciaLaboralsLegajo = new HashSet<ExperienciaLaboralLegajo>(0);
	private Set<RecorridoLegajoMigrado> recorridoLegajoMigrado = new HashSet<RecorridoLegajoMigrado>(0);
	
	private List<FuncionarioOee> funcionarioOees = new ArrayList<FuncionarioOee>(0);
	private List<OrgDiscapacitadosPersona> orgDiscapacitadosPersonas =
		new ArrayList<OrgDiscapacitadosPersona>(0);
	private Set<RedCapacitacion> redCapacitacions = new HashSet<RedCapacitacion>(0);

	public Persona() {
	}

	public Persona(Long idPersona, String usuAlta, Date fechaAlta) {
		this.idPersona = idPersona;
		this.usuAlta = usuAlta;
		this.fechaAlta = fechaAlta;
	}

	public Persona(
			Long idPersona, Pais paisByIdPaisExpedicionDoc, Ciudad ciudadByIdCiudadDirecc,
			Ciudad ciudadByIdCiudadNac, String nombres, String apellidos,
			String documentoIdentidad, String EMail, String EMailFuncionario, String sexo, String estadoCivil,
			Date fechaNacimiento, String departamentoNro, String piso, String callePrincipal,
			String primeraLateral, String segundaLateral, String direccionLaboral,
			String otrasDirecciones, String telefonos, Boolean activo, String usuAlta,
			Date fechaAlta, String usuMod, Date fechaMod,String telContacto, Set<Empleado> empleados,
			Set<Usuario> usuarios, Set<DatosVacaciones> datosVacacioneses, Boolean enfermo, Documentos documentoSangre) {
		this.idPersona = idPersona;
		this.paisByIdPaisExpedicionDoc = paisByIdPaisExpedicionDoc;
		this.ciudadByIdCiudadDirecc = ciudadByIdCiudadDirecc;
		this.ciudadByIdCiudadNac = ciudadByIdCiudadNac;
		this.nombres = nombres;
		this.apellidos = apellidos;

		this.datosVacacioneses = datosVacacioneses;
		this.documentoIdentidad = documentoIdentidad;
		this.EMail = EMail;
		this.EMail = EMailFuncionario;
		this.sexo = sexo;
		this.estadoCivil = estadoCivil;
		this.fechaNacimiento = fechaNacimiento;
		this.departamentoNro = departamentoNro;
		this.piso = piso;
		this.callePrincipal = callePrincipal;
		this.primeraLateral = primeraLateral;
		this.segundaLateral = segundaLateral;
		this.direccionLaboral = direccionLaboral;
		this.otrasDirecciones = otrasDirecciones;
		this.telefonos = telefonos;
		this.activo = activo;
		this.usuAlta = usuAlta;
		this.fechaAlta = fechaAlta;
		this.usuMod = usuMod;
		this.fechaMod = fechaMod;
		this.empleados = empleados;
		this.usuarios = usuarios;
		this.telContacto = telContacto;
		this.enfermo = enfermo;
		this.documentoSangre = documentoSangre;
	}

	@Id
	@Column(name = "id_persona", unique = true, nullable = false)
	@GeneratedValue(generator = "PERSONA_GENERATOR")
	@SequenceGenerator(name = "PERSONA_GENERATOR", sequenceName = "general.persona_id_persona_seq")
	public Long getIdPersona() {
		return this.idPersona;
	}

	public void setIdPersona(Long idPersona) {
		this.idPersona = idPersona;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_pais_expedicion_doc")
	public Pais getPaisByIdPaisExpedicionDoc() {
		return this.paisByIdPaisExpedicionDoc;
	}

	public void setPaisByIdPaisExpedicionDoc(Pais paisByIdPaisExpedicionDoc) {
		this.paisByIdPaisExpedicionDoc = paisByIdPaisExpedicionDoc;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_ciudad_direcc")
	public Ciudad getCiudadByIdCiudadDirecc() {
		return this.ciudadByIdCiudadDirecc;
	}

	public void setCiudadByIdCiudadDirecc(Ciudad ciudadByIdCiudadDirecc) {
		this.ciudadByIdCiudadDirecc = ciudadByIdCiudadDirecc;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_ciudad_nac")
	public Ciudad getCiudadByIdCiudadNac() {
		return this.ciudadByIdCiudadNac;
	}

	public void setCiudadByIdCiudadNac(Ciudad ciudadByIdCiudadNac) {
		this.ciudadByIdCiudadNac = ciudadByIdCiudadNac;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_datos_especificos_nacionalid")
	public DatosEspecificos getDatosEspecificos() {
		return this.datosEspecificos;
	}

	public void setDatosEspecificos(DatosEspecificos datosEspecificos) {
		this.datosEspecificos = datosEspecificos;
	}

	@Column(name = "nombres", length = 100)
	@Length(max = 100)
	public String getNombres() {
		return this.nombres;
	}

	public void setNombres(String nombres) {
		this.nombres = nombres;
	}

	@Column(name = "apellidos", length = 80)
	@Length(max = 80)
	public String getApellidos() {
		return this.apellidos;
	}

	public void setApellidos(String apellidos) {
		this.apellidos = apellidos;
	}

	@Column(name = "documento_identidad", length = 30)
	@Length(max = 30)
	public String getDocumentoIdentidad() {
		return this.documentoIdentidad;
	}

	public void setDocumentoIdentidad(String documentoIdentidad) {
		this.documentoIdentidad = documentoIdentidad;
	}

	@Column(name = "e_mail", length = 50)
	@Length(max = 50)
	public String getEMail() {
		return this.EMail;
	}

	public void setEMail(String EMail) {
		this.EMail = EMail;
	}
	
	@Column(name = "e_mail_funcionario", length = 50)
	@Length(max = 50)
	public String getEMailFuncionario() {
		return this.EMailFuncionario;
	}

	public void setEMailFuncionario(String EMailFuncionario) {
		this.EMailFuncionario = EMailFuncionario;
	}

	@Column(name = "sexo", length = 1)
	@Length(max = 1)
	public String getSexo() {
		return this.sexo;
	}

	public void setSexo(String sexo) {
		this.sexo = sexo;
	}

	@Column(name = "estado_civil", length = 1)
	@Length(max = 1)
	public String getEstadoCivil() {
		return this.estadoCivil;
	}

	public void setEstadoCivil(String estadoCivil) {
		this.estadoCivil = estadoCivil;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fecha_nacimiento", length = 13)
	public Date getFechaNacimiento() {
		return this.fechaNacimiento;
	}

	public void setFechaNacimiento(Date fechaNacimiento) {
		this.fechaNacimiento = fechaNacimiento;
	}

	@Column(name = "departamento_nro", length = 50)
	@Length(max = 50)
	public String getDepartamentoNro() {
		return this.departamentoNro;
	}

	public void setDepartamentoNro(String departamentoNro) {
		this.departamentoNro = departamentoNro;
	}

	@Column(name = "piso", length = 50)
	@Length(max = 50)
	public String getPiso() {
		return this.piso;
	}

	public void setPiso(String piso) {
		this.piso = piso;
	}

	@Column(name = "calle_principal", length = 100)
	@Length(max = 100)
	public String getCallePrincipal() {
		return this.callePrincipal;
	}

	public void setCallePrincipal(String callePrincipal) {
		this.callePrincipal = callePrincipal;
	}

	@Column(name = "primera_lateral", length = 50)
	@Length(max = 50)
	public String getPrimeraLateral() {
		return this.primeraLateral;
	}

	public void setPrimeraLateral(String primeraLateral) {
		this.primeraLateral = primeraLateral;
	}

	@Column(name = "segunda_lateral", length = 50)
	@Length(max = 50)
	public String getSegundaLateral() {
		return this.segundaLateral;
	}

	public void setSegundaLateral(String segundaLateral) {
		this.segundaLateral = segundaLateral;
	}

	@Column(name = "direccion_laboral", length = 100)
	@Length(max = 100)
	public String getDireccionLaboral() {
		return this.direccionLaboral;
	}

	public void setDireccionLaboral(String direccionLaboral) {
		this.direccionLaboral = direccionLaboral;
	}

	@Column(name = "otras_direcciones", length = 100)
	@Length(max = 100)
	public String getOtrasDirecciones() {
		return this.otrasDirecciones;
	}

	public void setOtrasDirecciones(String otrasDirecciones) {
		this.otrasDirecciones = otrasDirecciones;
	}

	@Column(name = "telefonos", length = 50)
	@Length(max = 50)
	public String getTelefonos() {
		return this.telefonos;
	}

	public void setTelefonos(String telefonos) {
		this.telefonos = telefonos;
	}
	
	@Column(name = "tel_contacto", length = 20)
	@Length(max = 20)
	public String getTelContacto() {
		return this.telContacto;
	}
	public void setTelContacto(String telContacto) {
		this.telContacto = telContacto;
	}
	
	@Column(name = "tiene_pariente")
	public Boolean getTienePariente() {
		return this.tienePariente;
	}

	public void setTienePariente(Boolean tienePariente) {
		this.tienePariente = tienePariente;
	}
	
	@Column(name = "activo")
	public Boolean getActivo() {
		return this.activo;
	}

	public void setActivo(Boolean activo) {
		this.activo = activo;
	}

	@Column(name = "observacion", length = 50)
	@Length(max = 50)
	public String getObservacion() {
		return this.observacion;
	}

	public void setObservacion(String observacion) {
		this.observacion = observacion;
	}

	@Column(name = "usu_alta", nullable = false, length = 50)
	@NotNull
	@Length(max = 50)
	public String getUsuAlta() {
		return this.usuAlta;
	}

	public void setUsuAlta(String usuAlta) {
		this.usuAlta = usuAlta;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_alta", nullable = false, length = 29)
	@NotNull
	public Date getFechaAlta() {
		return this.fechaAlta;
	}

	public void setFechaAlta(Date fechaAlta) {
		this.fechaAlta = fechaAlta;
	}

	@Column(name = "usu_mod", length = 50)
	@Length(max = 50)
	public String getUsuMod() {
		return this.usuMod;
	}

	public void setUsuMod(String usuMod) {
		this.usuMod = usuMod;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_mod", length = 29)
	public Date getFechaMod() {
		return this.fechaMod;
	}

	public void setFechaMod(Date fechaMod) {
		this.fechaMod = fechaMod;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_barrio")
	public Barrio getBarrio() {
		return barrio;
	}

	public void setBarrio(Barrio barrio) {
		this.barrio = barrio;
	}

	@Column(name = "es_funcionario")
	public Boolean getEsFuncionario() {
		return this.esFuncionario;
	}

	public void setEsFuncionario(Boolean esFuncionario) {
		this.esFuncionario = esFuncionario;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_datos_especificos_motivo")
	public DatosEspecificos getDatosEspecificosMotivo() {
		return datosEspecificosMotivo;
	}

	public void setDatosEspecificosMotivo(DatosEspecificos datosEspecificosMotivo) {
		this.datosEspecificosMotivo = datosEspecificosMotivo;
	}
	
	@Column(name = "telefono_part", length = 50)
	@Length(max = 50)
	public String getTelefonoPart() {
		return telefonoPart;
	}

	public void setTelefonoPart(String telefonoPart) {
		this.telefonoPart = telefonoPart;
	}

	@Column(name = "telefono_lab", length = 50)
	@Length(max = 50)
	public String getTelefonoLab() {
		return telefonoLab;
	}

	public void setTelefonoLab(String telefonoLab) {
		this.telefonoLab = telefonoLab;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public Set<Empleado> getEmpleados() {
		return this.empleados;
	}

	public void setEmpleados(Set<Empleado> empleados) {
		this.empleados = empleados;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public Set<Usuario> getUsuarios() {
		return this.usuarios;
	}

	public void setUsuarios(Set<Usuario> usuarios) {
		this.usuarios = usuarios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public Set<EmpresaPersona> getEmpresaPersonas() {
		return this.empresaPersonas;
	}

	public void setEmpresaPersonas(Set<EmpresaPersona> empresaPersonas) {
		this.empresaPersonas = empresaPersonas;
	}
	

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public Set<ExperienciaLaboral> getExperienciaLaborals() {
		return this.experienciaLaborals;
	}

	public void setExperienciaLaborals(Set<ExperienciaLaboral> experienciaLaborals) {
		this.experienciaLaborals = experienciaLaborals;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public Set<Parentesco> getParentescos() {
		return this.parentescos;
	}

	public void setParentescos(Set<Parentesco> parentescos) {
		this.parentescos = parentescos;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public Set<ExperienciaLaboralLegajo> getExperienciaLaboralsLegajo() {
		return this.experienciaLaboralsLegajo;
	}

	public void setExperienciaLaboralsLegajo(Set<ExperienciaLaboralLegajo> experienciaLaboralsLegajo) {
		this.experienciaLaboralsLegajo = experienciaLaboralsLegajo;
	}
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public Set<RecorridoLegajoMigrado> geRecorridoLegajoMigrado() {
		return this.recorridoLegajoMigrado;
	}

	public void setRecorridoLaboralMigrado(Set<RecorridoLegajoMigrado> recorridoLaboralMigrado) {
		this.recorridoLegajoMigrado = recorridoLaboralMigrado;
	}
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public List<FuncionarioOee> getFuncionarioOees() {
		return this.funcionarioOees;
	}

	public void setFuncionarioOees(List<FuncionarioOee> funcionarioOees) {
		this.funcionarioOees = funcionarioOees;
	}

	@Transient
	public String getNombreCompleto() {
		if (nombres == null && apellidos == null)
			return null;

		return nombres + " " + apellidos;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((idPersona == null) ? 0 : idPersona.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Persona other = (Persona) obj;
		if (idPersona == null) {
			if (other.idPersona != null)
				return false;
		} else if (!idPersona.equals(other.idPersona))
			return false;
		return true;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public List<OrgDiscapacitadosPersona> getOrgDiscapacitadosPersonas() {
		return this.orgDiscapacitadosPersonas;
	}

	public void setOrgDiscapacitadosPersonas(List<OrgDiscapacitadosPersona> orgDiscapacitadosPersonas) {
		this.orgDiscapacitadosPersonas = orgDiscapacitadosPersonas;
	}

	@Column(name = "obs_motivo", length = 1000)
	@Length(max = 1000)
	public String getObsMotivo() {
		return obsMotivo;
	}

	public void setObsMotivo(String obsMotivo) {
		this.obsMotivo = obsMotivo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public Set<RedCapacitacion> getRedCapacitacions() {
		return this.redCapacitacions;
	}

	public void setRedCapacitacions(Set<RedCapacitacion> redCapacitacions) {
		this.redCapacitacions = redCapacitacions;
	}

	@Transient
	public Boolean getSelected() {
		return selected;
	}

	public void setSelected(Boolean selected) {
		this.selected = selected;
	}

	@Column(name = "usu_alta_oee", length = 50)
	public String getUsuAltaOee() {
		return usuAltaOee;
	}

	public void setUsuAltaOee(String usuAltaOee) {
		this.usuAltaOee = usuAltaOee;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_alta_oee", length = 29)
	public Date getFechaAltaOee() {
		return fechaAltaOee;
	}

	public void setFechaAltaOee(Date fechaAltaOee) {
		this.fechaAltaOee = fechaAltaOee;
	}

	@Column(name = "usu_mod_oee", length = 50)
	public String getUsuModOee() {
		return usuModOee;
	}

	public void setUsuModOee(String usuModOee) {
		this.usuModOee = usuModOee;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_mod_oee", length = 29)
	public Date getFechaModOee() {
		return fechaModOee;
	}

	public void setFechaModOee(Date fechaModOee) {
		this.fechaModOee = fechaModOee;
	}

	@Column(name = "tipo", length = 10)
	public String getTipo() {
		return tipo;
	}

	public void setTipo(String tipo) {
		this.tipo = tipo;
	}

	@Column(name = "grupo_sanguineo_abo", length = 2)
	public String getGrupoSanguineoAbo() {
		return grupoSanguineoAbo;
	}

	public void setGrupoSanguineoAbo(String grupoSanguineoAbo) {
		this.grupoSanguineoAbo = grupoSanguineoAbo;
	}

	@Column(name = "grupo_sanguineo_rh", length = 1)
	public String getGrupoSanguineoRh() {
		return grupoSanguineoRh;
	}

	public void setGrupoSanguineoRh(String grupoSanguineoRh) {
		this.grupoSanguineoRh = grupoSanguineoRh;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_datos_especificos_etnia")
	public DatosEspecificos getDatosEspecificosEtnia() {
		return datosEspecificosEtnia;
	}

	public void setDatosEspecificosEtnia(DatosEspecificos datosEspecificosEtnia) {
		this.datosEspecificosEtnia = datosEspecificosEtnia;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_documento")
	public Documentos getDocumentos() {
		return documentos;
	}

	public void setDocumentos(Documentos documentos) {
		this.documentos = documentos;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_documento_sangre")
	public Documentos getDocumentoSangre() {
		return documentoSangre;
	}

	public void setDocumentoSangre(Documentos documentoSangre) {
		this.documentoSangre = documentoSangre;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public Set<DatosVacaciones> getDatosVacacioneses() {
		return this.datosVacacioneses;
	}

	public void setDatosVacacioneses(Set<DatosVacaciones> datosVacacioneses) {
		this.datosVacacioneses = datosVacacioneses;
	}

	@Column(name = "cant_personas_a_cargo")
	public Long getCantPersonasACargo() {
		return cantPersonasACargo;
	}

	public void setCantPersonasACargo(Long cantPersonasACargo) {
		this.cantPersonasACargo = cantPersonasACargo;
	}
	
	@Column(name = "enfermo")
	public Boolean getEnfermo() {
		return enfermo;
	}

	public void setEnfermo(Boolean enfermo) {
		this.enfermo = enfermo;
	}
	
	

	
	

}
