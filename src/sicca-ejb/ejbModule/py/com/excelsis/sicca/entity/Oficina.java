package py.com.excelsis.sicca.entity;


import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.Vector;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.validator.Length;
import org.jboss.seam.Component;
import org.jboss.seam.annotations.In;
import org.jboss.seam.contexts.Contexts;
import org.jboss.seam.security.Credentials;
import org.jboss.seam.security.Identity;

/**
 * Oficina generated by Generality
 */
@Entity
@Table(name = "oficina", schema = "planificacion")
public class Oficina implements java.io.Serializable {
	private Long idOficina;
	private String descripcion;
	private String direccion;
	private String numero;
	private String piso;
	private String coordX;
	private String coordY;
	private String nroTelefono;
	private String nroInterno;
	private Boolean alquilado;
	private Boolean activo;
	private Ciudad ciudad;
	private String usuAlta;
	private Date fechaAlta;
	private String usuMod;
	private Date fechaMod;
	private Barrio barrio;
	private ConfiguracionUoCab configuracionUoCab;
	private Set<Entidad> entidads = new HashSet<Entidad>(0);

	public Oficina() {
	}

	public Oficina(Long idOficina) {
		this.idOficina = idOficina;
	}

	@Id
	@GeneratedValue(generator="OFICINA_GENERATOR")
	@SequenceGenerator(name="OFICINA_GENERATOR",sequenceName="planificacion.oficina_id_oficina_seq")

	@Column(name = "id_oficina")
	public Long getIdOficina() {
		return this.idOficina;
	}

	public void setIdOficina(Long idOficina) {
		this.idOficina = idOficina;
	}
	

	@Column(name = "descripcion")
	public String getDescripcion() {
		return this.descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}
	

	@Column(name = "direccion")
	public String getDireccion() {
		return this.direccion;
	}

	public void setDireccion(String direccion) {
		this.direccion = direccion;
	}
	

	@Column(name = "numero")
	public String getNumero() {
		return this.numero;
	}

	public void setNumero(String numero) {
		this.numero = numero;
	}
	

	@Column(name = "piso")
	public String getPiso() {
		return this.piso;
	}

	public void setPiso(String piso) {
		this.piso = piso;
	}
	

	@Column(name = "coord_x")
	public String getCoordX() {
		return this.coordX;
	}

	public void setCoordX(String coordX) {
		this.coordX = coordX;
	}
	

	@Column(name = "coord_y")
	public String getCoordY() {
		return this.coordY;
	}

	public void setCoordY(String coordY) {
		this.coordY = coordY;
	}
	

	@Column(name = "nro_telefono")
	public String getNroTelefono() {
		return this.nroTelefono;
	}

	public void setNroTelefono(String nroTelefono) {
		this.nroTelefono = nroTelefono;
	}
	

	@Column(name = "nro_interno")
	public String getNroInterno() {
		return this.nroInterno;
	}

	public void setNroInterno(String nroInterno) {
		this.nroInterno = nroInterno;
	}
	

	@Column(name = "alquilado")
	public Boolean getAlquilado() {
		return this.alquilado;
	}

	public void setAlquilado(Boolean alquilado) {
		this.alquilado = alquilado;
	}
	

	@Column(name = "activo")
	public Boolean getActivo() {
		return this.activo;
	}

	public void setActivo(Boolean activo) {
		this.activo = activo;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_ciudad")
	public Ciudad getCiudad() {
		return this.ciudad;
	}

	public void setCiudad(Ciudad ciudad) {
		this.ciudad = ciudad;
	}
	

	@Column(name = "usu_alta")
	public String getUsuAlta() {
		return this.usuAlta;
	}

	public void setUsuAlta(String usuAlta) {
		this.usuAlta = usuAlta;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_alta")
	public Date getFechaAlta() {
		return this.fechaAlta;
	}

	public void setFechaAlta(Date fechaAlta) {
		this.fechaAlta = fechaAlta;
	}
	

	@Column(name = "usu_mod")
	public String getUsuMod() {
		return this.usuMod;
	}

	public void setUsuMod(String usuMod) {
		this.usuMod = usuMod;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_mod")
	public Date getFechaMod() {
		return this.fechaMod;
	}

	public void setFechaMod(Date fechaMod) {
		this.fechaMod = fechaMod;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "oficina")
	public Set<Entidad> getEntidads() {
		return this.entidads;
	}

	public void setEntidads(Set<Entidad> entidads) {
		this.entidads = entidads;
	}
	
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_barrio")
	public Barrio getBarrio() {
		return barrio;
	}

	public void setBarrio(Barrio barrio) {
		this.barrio = barrio;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_configuracion_uo_cab")
	public ConfiguracionUoCab getConfiguracionUoCab() {
		return configuracionUoCab;
	}

	public void setConfiguracionUoCab(ConfiguracionUoCab configuracionUoCab) {
		this.configuracionUoCab = configuracionUoCab;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((idOficina == null) ? 0 : idOficina.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Oficina other = (Oficina) obj;
		if (idOficina == null) {
			if (other.idOficina != null)
				return false;
		} else if (!idOficina.equals(other.idOficina))
			return false;
		return true;
	}
}
