package py.com.excelsis.sicca.entity;


import java.util.Date;
import java.util.Properties;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;


import py.com.excelsis.sicca.util.EXCProperties;
import py.com.excelsis.sicca.util.EntityBase;
import py.com.excelsis.sicca.util.SICCASessionParameters;

/**
 * EscalaCondTrabEspecif generated by Generality
 */
@Entity
@Table(name = "escala_cond_trab_especif", schema = "planificacion")
public class EscalaCondTrabEspecif extends EntityBase {
	/**
	 * 
	 */
	private static final long serialVersionUID = -3477060127655249582L;
	private Long idEscalaCondTrabEspecif;
	private String descripcion;
	private Boolean activo;
	private Integer desde;
	private Integer hasta;
	private String usuAlta;
	private Date fechaAlta;
	private String usuMod;
	private Date fechaMod;
	

	public EscalaCondTrabEspecif() {
	}

	public EscalaCondTrabEspecif(Long idEscalaCondTrabEspecif) {
		this.idEscalaCondTrabEspecif = idEscalaCondTrabEspecif;
	}

	@Id
	@GeneratedValue(generator="ESCALA_COND_TRAB_ESPECIF_GENERATOR")
	@SequenceGenerator(name="ESCALA_COND_TRAB_ESPECIF_GENERATOR",sequenceName="planificacion.escala_cond_trab_especif_id_escala_cond_trab_especif_seq")

	@Column(name = "id_escala_cond_trab_especif")
	public Long getIdEscalaCondTrabEspecif() {
		return this.idEscalaCondTrabEspecif;
	}

	public void setIdEscalaCondTrabEspecif(Long idEscalaCondTrabEspecif) {
		this.idEscalaCondTrabEspecif = idEscalaCondTrabEspecif;
	}
	

	@Column(name = "descripcion")
	public String getDescripcion() {
		return this.descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}
	

	@Column(name = "activo")
	public Boolean getActivo() {
		return this.activo;
	}

	public void setActivo(Boolean activo) {
		this.activo = activo;
	}
	

	@Column(name = "desde")
	public Integer getDesde() {
		return this.desde;
	}

	public void setDesde(Integer desde) {
		this.desde = desde;
	}
	

	@Column(name = "hasta")
	public Integer getHasta() {
		return this.hasta;
	}

	public void setHasta(Integer hasta) {
		this.hasta = hasta;
	}
	

	@Column(name = "usu_alta")
	public String getUsuAlta() {
		return this.usuAlta;
	}

	public void setUsuAlta(String usuAlta) {
		this.usuAlta = usuAlta;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_alta")
	public Date getFechaAlta() {
		return this.fechaAlta;
	}

	public void setFechaAlta(Date fechaAlta) {
		this.fechaAlta = fechaAlta;
	}
	

	@Column(name = "usu_mod")
	public String getUsuMod() {
		return this.usuMod;
	}

	public void setUsuMod(String usuMod) {
		this.usuMod = usuMod;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_mod")
	public Date getFechaMod() {
		return this.fechaMod;
	}

	public void setFechaMod(Date fechaMod) {
		this.fechaMod = fechaMod;
	}
	
	
	
	@Transient
	public Long getId() {
		return idEscalaCondTrabEspecif;
	}

	/**
	 * 
	 * @return properties
	 */
	@Transient
	public Properties getProperties() {
		Properties properties = new EXCProperties();
		properties.put(SICCASessionParameters.ESCALA_COND_TRAB_ESPECIF_ID, getId());
		properties.put(SICCASessionParameters.ESCALA_COND_TRAB_ESPECIF_DESCRIPCION,
				descripcion);

		return properties;
	}

	/**
	 * 
	 * @param properties
	 */
	public void setProperties(Properties properties) {
		// TODO Auto-generated method stub

	}
}
