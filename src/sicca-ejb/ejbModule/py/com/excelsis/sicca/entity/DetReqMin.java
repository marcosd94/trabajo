package py.com.excelsis.sicca.entity;

// Generated 15-sep-2011 8:16:18 by Hibernate Tools 3.4.0.Beta1

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * DetReqMin generated by hbm2java
 */
@Entity
@Table(name = "det_req_min", schema = "planificacion")
public class DetReqMin implements java.io.Serializable {

	private Long idDetReqMin;
	private PlantaCargoDet plantaCargoDet;
	private Cpt cpt;
	private RequisitoMinimoCpt requisitoMinimoCpt;
	private String tipo;
	private Float puntajeReqMin;
	private ConcursoPuestoAgr concursoPuestoAgr;
	private HomologacionPerfilMatriz homologacionPerfilMatriz;
	
	private List<DetOpcionesConvenientes> detOpcionesConvenienteses = new ArrayList<DetOpcionesConvenientes>(0);
	private List<DetMinimosRequeridos> detMinimosRequeridoses = new ArrayList<DetMinimosRequeridos>(0);
	private Boolean activo;
	public DetReqMin() {
	}

	public DetReqMin(Long idDetReqMin, PlantaCargoDet plantaCargoDet, Cpt cpt,
			RequisitoMinimoCpt requisitoMinimoCpt, String tipo,
			Float puntajeReqMin) {
		this.idDetReqMin = idDetReqMin;
		this.plantaCargoDet = plantaCargoDet;
		this.cpt = cpt;
		this.requisitoMinimoCpt = requisitoMinimoCpt;
		this.tipo = tipo;
		this.puntajeReqMin = puntajeReqMin;
	}

	public DetReqMin(Long idDetReqMin, PlantaCargoDet plantaCargoDet, Cpt cpt,
			RequisitoMinimoCpt requisitoMinimoCpt, String tipo,
			Float puntajeReqMin,
			List<DetOpcionesConvenientes> detOpcionesConvenienteses,
			List<DetMinimosRequeridos> detMinimosRequeridoses) {
		this.idDetReqMin = idDetReqMin;
		this.plantaCargoDet = plantaCargoDet;
		this.cpt = cpt;
		this.requisitoMinimoCpt = requisitoMinimoCpt;
		this.tipo = tipo;
		this.puntajeReqMin = puntajeReqMin;
		this.detOpcionesConvenienteses = detOpcionesConvenienteses;
		this.detMinimosRequeridoses = detMinimosRequeridoses;
	}

	@Id
	@GeneratedValue(generator="DET_REQ_MIN_GENERATOR")
	@SequenceGenerator(name="DET_REQ_MIN_GENERATOR",sequenceName="planificacion.det_req_min_id_det_req_min_seq")

	@Column(name = "id_det_req_min", unique = true, nullable = false)
	public Long getIdDetReqMin() {
		return this.idDetReqMin;
	}

	public void setIdDetReqMin(Long idDetReqMin) {
		this.idDetReqMin = idDetReqMin;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_planta_cargo_det")

	public PlantaCargoDet getPlantaCargoDet() {
		return this.plantaCargoDet;
	}

	public void setPlantaCargoDet(PlantaCargoDet plantaCargoDet) {
		this.plantaCargoDet = plantaCargoDet;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_cpt")
	public Cpt getCpt() {
		return this.cpt;
	}

	public void setCpt(Cpt cpt) {
		this.cpt = cpt;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_requisito_minimo_cpt")
	
	public RequisitoMinimoCpt getRequisitoMinimoCpt() {
		return this.requisitoMinimoCpt;
	}

	public void setRequisitoMinimoCpt(RequisitoMinimoCpt requisitoMinimoCpt) {
		this.requisitoMinimoCpt = requisitoMinimoCpt;
	}

	@Column(name = "tipo", nullable = false, length = 10)
	@NotNull
	@Length(max = 10)
	public String getTipo() {
		return this.tipo;
	}

	public void setTipo(String tipo) {
		this.tipo = tipo;
	}

	@Column(name = "puntaje_req_min", precision = 8, scale = 8)
	public Float getPuntajeReqMin() {
		return this.puntajeReqMin;
	}

	public void setPuntajeReqMin(Float puntajeReqMin) {
		this.puntajeReqMin = puntajeReqMin;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_concurso_puesto_agr")
	public ConcursoPuestoAgr getConcursoPuestoAgr() {
		return concursoPuestoAgr;
	}

	public void setConcursoPuestoAgr(ConcursoPuestoAgr concursoPuestoAgr) {
		this.concursoPuestoAgr = concursoPuestoAgr;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "detReqMin")
	public List<DetOpcionesConvenientes> getDetOpcionesConvenienteses() {
		return this.detOpcionesConvenienteses;
	}

	public void setDetOpcionesConvenienteses(
		List<DetOpcionesConvenientes> detOpcionesConvenienteses) {
		this.detOpcionesConvenienteses = detOpcionesConvenienteses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "detReqMin")
	public List<DetMinimosRequeridos> getDetMinimosRequeridoses() {
		return this.detMinimosRequeridoses;
	}

	public void setDetMinimosRequeridoses(
			List<DetMinimosRequeridos> detMinimosRequeridoses) {
		this.detMinimosRequeridoses = detMinimosRequeridoses;
	}

	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_homologacion")
	public HomologacionPerfilMatriz getHomologacionPerfilMatriz() {
		return homologacionPerfilMatriz;
	}
	
	public void setHomologacionPerfilMatriz(HomologacionPerfilMatriz homologacionPerfilMatriz) {
		this.homologacionPerfilMatriz = homologacionPerfilMatriz;
	}
	
	@Column(name = "activo")
	public Boolean getActivo() {
		return activo;
	}

	public void setActivo(Boolean activo) {
		this.activo = activo;
	}
}
