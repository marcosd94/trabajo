package py.com.excelsis.sicca.seguridad.entity;

// Generated 14-sep-2011 13:12:06 by Hibernate Tools 3.4.0.Beta1

import java.util.Date;
import java.util.HashSet;
import java.util.Properties;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

import py.com.excelsis.sicca.util.EXCProperties;
import py.com.excelsis.sicca.util.EntityBase;
import py.com.excelsis.sicca.util.SICCASessionParameters;

/**
 * Rol generated by hbm2java
 */
@Entity
@Table(name = "rol", schema = "seguridad")
public class Rol extends EntityBase implements Comparable { 

	/**
	 * 
	 */
	private static final long serialVersionUID = -2724700589180879005L;
	private Long idRol;
	private String descripcion;
	private Boolean activo;
	private Date fechaMod;
	private String usuMod;
	private Date fechaAlta;
	private String usuAlta;
	private String tipo;
	private Boolean homologador;
	
	private Set<RolFuncion> rolFuncions = new HashSet<RolFuncion>(0);
	private Set<UsuarioRol> usuarioRols = new HashSet<UsuarioRol>(0);

	public Rol() {
	}

	public Rol(Long idRol, String descripcion, Boolean activo, Date fechaAlta,
			String usuAlta) {
		this.idRol = idRol;
		this.descripcion = descripcion;
		this.activo = activo;
		this.fechaAlta = fechaAlta;
		this.usuAlta = usuAlta;
	}

	public Rol(Long idRol, String descripcion, Boolean activo, Date fechaMod,
			String usuMod, Date fechaAlta, String usuAlta,
			Set<RolFuncion> rolFuncions, Set<UsuarioRol> usuarioRols) {
		this.idRol = idRol;
		this.descripcion = descripcion;
		this.activo = activo;
		this.fechaMod = fechaMod;
		this.usuMod = usuMod;
		this.fechaAlta = fechaAlta;
		this.usuAlta = usuAlta;
		this.rolFuncions = rolFuncions;
		this.usuarioRols = usuarioRols;
	}

	@Id
	@GeneratedValue(generator="ROL_GENERATOR")
	@SequenceGenerator(name="ROL_GENERATOR",sequenceName="seguridad.rol_id_rol_seq")
	@Column(name = "id_rol", unique = true, nullable = false)
	public Long getIdRol() {
		return this.idRol;
	}

	public void setIdRol(Long idRol) {
		this.idRol = idRol;
	}

	@Column(name = "descripcion", nullable = false, length = 250)
	@NotNull
	@Length(max = 250)
	public String getDescripcion() {
		return this.descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}

	
	@Column(name = "activo", nullable = false)
	public Boolean getActivo() {
		return activo;
	}

	public void setActivo(Boolean activo) {
		this.activo = activo;
	}


	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_mod", length = 29)
	public Date getFechaMod() {
		return this.fechaMod;
	}

	
	public void setFechaMod(Date fechaMod) {
		this.fechaMod = fechaMod;
	}

	@Column(name = "usu_mod", length = 50)
	@Length(max = 50)
	public String getUsuMod() {
		return this.usuMod;
	}

	public void setUsuMod(String usuMod) {
		this.usuMod = usuMod;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_alta", nullable = false, length = 29)
	@NotNull
	public Date getFechaAlta() {
		return this.fechaAlta;
	}

	public void setFechaAlta(Date fechaAlta) {
		this.fechaAlta = fechaAlta;
	}

	@Column(name = "usu_alta", nullable = false, length = 50)
	@NotNull
	@Length(max = 50)
	public String getUsuAlta() {
		return this.usuAlta;
	}

	public void setUsuAlta(String usuAlta) {
		this.usuAlta = usuAlta;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "rol")
	public Set<RolFuncion> getRolFuncions() {
		return this.rolFuncions;
	}

	public void setRolFuncions(Set<RolFuncion> rolFuncions) {
		this.rolFuncions = rolFuncions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "rol")
	public Set<UsuarioRol> getUsuarioRols() {
		return this.usuarioRols;
	}

	public void setUsuarioRols(Set<UsuarioRol> usuarioRols) {
		this.usuarioRols = usuarioRols;
	}
	
	@Transient
	public Long getId() {
		return idRol;
	}

	/**
	 * 
	 * @return properties
	 */
	@Transient
	public Properties getProperties() {
		Properties properties = new EXCProperties();
		properties.put(SICCASessionParameters.ROL_ID, getId());
		properties.put(SICCASessionParameters.ROL_DESCRIPCION,
				descripcion);

		return properties;
	}

	/**
	 * 
	 * @param properties
	 */
	public void setProperties(Properties properties) {
		// TODO Auto-generated method stub

	}


	public int compareTo(Object o) {
        Rol rol = (Rol)o;       
        return this.descripcion.compareTo(rol.getDescripcion());
    }
	@Column(name = "tipo")
	public String getTipo() {
		return tipo;
	}

	public void setTipo(String tipo) {
		this.tipo = tipo;
	}

	
	@Column(name = "homologador")
	public Boolean getHomologador() {
		return homologador;
	}
	public void setHomologador(Boolean homologador) {
		this.homologador = homologador;
	}
	
}
